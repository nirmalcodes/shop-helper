rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    //TODO : remove in future
    match /configs/configData {
      allow read: if true;
      allow write: if request.auth.token.admin == true;
    }

    match /siteConfigurations/configData {
      allow read;
    }
    
    function isSignedIn() {
      return request.auth != null;
    }

    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isRoot() {
      return isSignedIn() && getUserRole() == "root";
    }

    function isAdmin() {
      return isSignedIn() && getUserRole() == "admin";
    }

    function isUser() {
      return isSignedIn() && getUserRole() == "user";
    }

    //match /accessGrantedUsers/{userId} {
    //  allow read;
    //  allow write, update, delete: if isRoot() || isAdmin();
    //}
    
    //match /users/{userId} {
    //  allow read, write, delete: if isRoot() || isAdmin();
    //  allow update: if isRoot();
    //}

    // Public read access for accessGrantedUsers
    match /accessGrantedUsers/{userId} {
      allow read;
      // Signed-in users with root or admin role can write/update/delete
      allow write, update, delete: if isSignedIn() && (isRoot() || isAdmin());
    }

    // Restrict users collection access
    match /users/{userId} {
      // Only signed-in users can create documents
      allow create, read: if isSignedIn();
      // Document name must match user ID
      allow create: if request.auth.uid == resource.id;
      // Users can only access their own document
      allow read, write, delete: if isSignedIn() && request.auth.uid == resource.id;
    }

    match /kokoConfigurations/configData {
      allow read, write: if isRoot() || isAdmin();
      allow read: if isUser();
    }

    //match /messages/{document=**} {
    //  allow read, write: if isRoot() || isAdmin();
    //  allow read: if isUser();
    //}
    
    match /messages/{document=**} {
      allow read: if isUser();
      allow create, read, write: if isRoot() || isAdmin();
      allow delete: if (isRoot() || isAdmin()) && resource.data.createdBy == request.auth.email;
    }

  }
}